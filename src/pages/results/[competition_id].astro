---
import { db, eq, Competition_Result} from 'astro:db';
import type { TCompetitionResults } from '../../types/TCompetitionResults'
import Layout from '../../layouts/Layout.astro';
import CategoryComponent from '../../components/CategoryComponent.astro';
import { organizeResultsByCategoryAndFinal } from '../../helpers/organizeResultsByCategoryAndFinal'
export const prerender = false

const  competition_id  = parseInt(Astro.params.competition_id) // Si no llega como string

const results: TCompetitionResults[] = await db.select().from(Competition_Result)
const filteredResults = results.filter(result => result.competition_id === competition_id);
// Organiza las competiciones por Categoria => {[semi] => [resultados], [final] => [resultados]}
const resultsByCategoryAndFinal: {[key: string]: {[key: string]: TCompetitionResults[]}} = organizeResultsByCategoryAndFinal(filteredResults)
---
<Layout title={"Competicion"}>
    <section>
    {
    Object.keys(resultsByCategoryAndFinal).map(category => {        
        return <CategoryComponent category={category} results={resultsByCategoryAndFinal[category]}/>
    })
    }
    </section>
</Layout>
